import logging
from services.api_req import Weather
from config import WEATHER_API_KEY

async def get_weather_forecast(start_city: str, end_city: str, intermediate_cities: str, days: int):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ–≥–Ω–æ–∑–æ–º.
    
    """
    weather_api = Weather(api_key=WEATHER_API_KEY)
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤
    cities = [start_city]
    if intermediate_cities:
        intermediates = [city.strip() for city in intermediate_cities.split(',') if city.strip()]
        cities.extend(intermediates)
    cities.append(end_city)
    print(cities)
    
    forecast_results = {}
    
    for city in cities:
        forecast = weather_api.get_forecast_weather_data(city, days=days)
        if isinstance(forecast, tuple) or isinstance(forecast, int):
            error_message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥–æ—Ä–æ–¥–∞ {city}: {forecast}"
            logging.error(error_message)
            return error_message
        elif not forecast:
            error_message = f"–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥–æ—Ä–æ–¥–∞ {city}."
            logging.error(error_message)
            return error_message
        forecast_results[city] = forecast
    
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–æ–≥–Ω–æ–∑–æ–º
    forecast_message = "üìÖ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã:\n\n"
    for city, forecast in forecast_results.items():
        forecast_message += f"**{city}**\n"
        for day in forecast:
            date = day['date']
            temp_min = day['temp_min']
            temp_max = day['temp_max']
            wind_speed = day['wind_speed']
            humidity = day['humidity']
            precipitation_prob = day['precipitation_prob']
            forecast_message += (f"‚Ä¢ {date}:\n      –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: –ú–∏–Ω {temp_min}¬∞C, –ú–∞–∫—Å {temp_max}¬∞C \n     –í–µ—Ç–µ—Ä {wind_speed} –∫–º/—á \n "
                                 f"     –í–ª–∞–∂–Ω–æ—Å—Ç—å {humidity}% \n    –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–∂–¥—è {precipitation_prob}%\n")
        forecast_message += "\n"
    
    return forecast_message
